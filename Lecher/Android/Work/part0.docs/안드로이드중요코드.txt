import android.content.Intent;  // 자동 import 안됨.


Intent i = new Intent(Intent.ACTION_VIEW, Uri.parse( "tel://119" ) );
startActivity(i); // 새창 띄우기.


Intent i = new Intent(Intent.ACTION_VIEW, Uri.parse( "http://www.google.com") );
startActivity(i); // 새창 띄우기.



@Override
protected void onClick(View v) {
    // 새창 띄우기
    Intent i = new Intent( /* context */ MainActivity.this  ,  /* class 이름 */ LoginActivity.class);
    startActivityForResult(i,REQUEST_CODE_LOGIN);
}


@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {

    super.onActivityResult(requestCode, resultCode, data);
    
    // requestCode == REQUEST_CODE_LOGIN
    // resultCode  == RESULT_OK
    // data   == 처리된 결과 정보가 들어 있다.

    // 결과 확인
    if( requestCode == REQUEST_CODE_LOGIN && resultCode == RESULT_OK ){
        boolean loginStatus = data.getBooleanExtra("LOGIN_STATUS", false);

        // menu 보이고 감추기..

    }
}

Context 얻는 3가지 방법.
1. getApplicationContext()   // 액티비티, Service
2. View.getContext()
3. MainActivity.this         // 액티비티인 경우


inflation 하는 방법 2가지.
LayoutInflater.from( MainActivity.this )
              .inflate(R.layout.layout_sub1, parent, true);
              
LayoutInflater inflater = (LayoutInflater) getSystemService( LAYOUT_INFLATER_SERVICE);
inflater.inflate(R.layout.layout_sub1, parent, true);

// AlertDialog 로 출력하기
AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);
builder.setTitle( item.getDataItem01() );
builder.setMessage( item.toString() );
builder.setIcon( R.mipmap.ic_launcher );
builder.setPositiveButton("확인", null);
builder.show();


Custom ListView 작업 순서.
1. custom view xml 만들기
2. model 클래스 만들기
3. adapter 만들기.
4. activity_main.xml 수정
    디자인에 ListView  추가
5. MainActivity.java 수정                     
    5.1 위젯 선언                             6. Adapter 작업       
    5.2 위젯 찾기                               6.1 데이터 만들기       
    5.3 위젯 설정 : 리스너 만들기.              6.2 adapte 생성   
    6.3 리스트뷰와 adapter 연결. <-------------------|